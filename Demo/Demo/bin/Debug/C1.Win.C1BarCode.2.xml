<?xml version="1.0"?>
<doc>
  <assembly>
    <name>C1.Win.C1BarCode.2</name>
  </assembly>
  <members>
    <member name="T:C1.Win.C1BarCode.BarDirectionEnum">
      <summary>
            Specifies the direction of the barcode
            </summary>
    </member>
    <member name="F:C1.Win.C1BarCode.BarDirectionEnum.Normal">
      <summary>
            The barcode is rendered in the horizontal direction.
            </summary>
    </member>
    <member name="F:C1.Win.C1BarCode.BarDirectionEnum.Up">
      <summary>
            The barcode is rendered from the bottom up.
            </summary>
    </member>
    <member name="F:C1.Win.C1BarCode.BarDirectionEnum.Down">
      <summary>
            The barcode is rendered from the top down.
            </summary>
    </member>
    <member name="T:C1.Win.C1BarCode.CodeTypeEnum">
      <summary>
            Specifies the type of barcode to be generated by the C1BarCode control.
            </summary>
      <remarks>
        <para>The <see cref="T:C1.Win.C1BarCode.CodeTypeEnum" /> enumeration represents the different types 
            of barcode that can be generated by the <see cref="T:C1.Win.C1BarCode.C1BarCode" /> control.</para>
        <para>Some types of barcode can be used to represent alphanumeric values, 
            others can only represent numeric values.</para>
      </remarks>
    </member>
    <member name="F:C1.Win.C1BarCode.CodeTypeEnum.Code39">
      <summary>
            Code 39 is an alpha-numeric encoding also known as 3 of 9 and LOGMARS.
            This was the first alphanumeric symbology developed, and is one of the
            most widely used encodings.
            </summary>
    </member>
    <member name="F:C1.Win.C1BarCode.CodeTypeEnum.Code93">
      <summary>
            Code 93 is an alpha-numeric encoding that is slightly denser than code 39.
            </summary>
    </member>
    <member name="F:C1.Win.C1BarCode.CodeTypeEnum.Code128">
      <summary>
            Code 128 is a very high density alpha-numeric bar code. It will use the 
            least amount of space of any current 1-D symbology for symbols with 6 
            characters or more. 
            </summary>
    </member>
    <member name="F:C1.Win.C1BarCode.CodeTypeEnum.CodeI2of5">
      <summary>
            Code I2of5 is a numeric encoding. The symbol can be as long as necessary 
            to store the encoded data.
            </summary>
    </member>
    <member name="F:C1.Win.C1BarCode.CodeTypeEnum.Codabar">
      <summary>
            Codabar may encode 16 different characters (0 through 9 plus -$:/.+), 
            plus an additional 4 start/stop characters (A through D). Codabar
            is used by some US blood banks, photo labs, and on FedEx air bills. 
            </summary>
    </member>
    <member name="F:C1.Win.C1BarCode.CodeTypeEnum.PostNet">
      <summary>
            PostNet is a numeric encoding used by the US postal service. It differs 
            from most others in that it is based on the height of the bars rather than
            on their width.
            </summary>
    </member>
    <member name="F:C1.Win.C1BarCode.CodeTypeEnum.Ean13">
      <summary>
            EAN-13 was implemented by the International Article Numbering Association (EAN)
            in Europe. EAN-13 encodes a 12-digit code that consists of a 2 digit system code
            followed by a 5 digit manufacturer code and a 5-digit product code. The 12-digit 
            code is followed by a checksum digit (automatically added by the control).
            </summary>
    </member>
    <member name="F:C1.Win.C1BarCode.CodeTypeEnum.Ean8">
      <summary>
            EAN-8 provides a short barcode for small packages. It encodes a 7-digit
            code that consists of a 2 or 3 digit system code followed by a 4 or 5
            digit product code. The 7-digit code is followed by a checksum digit
            (automatically added by the control).
            </summary>
    </member>
    <member name="F:C1.Win.C1BarCode.CodeTypeEnum.UpcA">
      <summary>
            UPC-A is the common encoding you will find on virtually every consumer good on 
            the shelves of your local supermarket, as well as books, magazines, and newspapers.
            It is similar to EAN-13, and encodes 11 digits of numeric data along with a trailing 
            check digit. The first digit determines the number system, followed by a 5-digit
            manufacturer code, a 5-digit product code, and the check digit.
            </summary>
    </member>
    <member name="F:C1.Win.C1BarCode.CodeTypeEnum.UpcE">
      <summary>
        <para>UPC-E is a variation of UPC-A which allows for a more compact barcode by eliminating 
            "extra" zeros. Since the resulting UPC-E barcode is about half the size as an UPC-A 
            barcode, it is generally used on products with very small packaging.</para>
        <para>When using the UpcE encoding, set the Text property to an 11-digit string as
            if you were using the UpcA encoding.</para>
        <para>Note that not all UpcA codes can be encoded in UpcE. 
            If the manufacturer code ends with "000", "100", or "200", the product number must be &lt;= 900.
            If the manufacturer code ends with "00" but not with "100", "200", or "300", then the product number must be &lt;= 90.
            If the manufacturer code ends with "0" but not with "00", then the product number must be &lt;= 9.
            If the manufacturer code does not end with "0", then the product number must be between 5 and 9.
            </para>
      </summary>
    </member>
    <member name="T:C1.Win.C1BarCode.C1BarCode">
      <summary>
            Creates barcode representations of alphanumeric values.
            </summary>
      <remarks>
        <para>To use the C1BarCode control, set the <see cref="P:C1.Win.C1BarCode.C1BarCode.CodeType" /> 
            property to the type of encoding you want to use, then set the 
            <see cref="P:C1.Win.C1BarCode.C1BarCode.Text" /> property to the value you want to encode.</para>
        <para>The control will show the barcode image. If you want to include the barcode in
            a document, use the <see cref="P:C1.Win.C1BarCode.C1BarCode.Image" /> property to retrieve a 
            resolution-independent image of the barcode.</para>
      </remarks>
      <example>This sample shows how to use the Text property to encode
            the value "123456" as a Code39-encoded barcode.
            <code>
            c1barcode1.CodeType = CodeTypeEnum.Code39;
            c1barcode1.Text = "123456";
            pictureBox1.Image = c1barcode1.Image;
            </code></example>
    </member>
    <member name="M:C1.Win.C1BarCode.C1BarCode.#ctor">
      <summary>
            Creates a new instance of the <see cref="T:C1.Win.C1BarCode.C1BarCode" /> control.
            </summary>
    </member>
    <member name="M:C1.Win.C1BarCode.C1BarCode.GetImage(System.Drawing.Imaging.ImageFormat)">
      <summary>
            Gets an image of the barcode that represents the value in the <see cref="P:C1.Win.C1BarCode.C1BarCode.Text" /> 
            property, obtained using the encoding specified by the <see cref="P:C1.Win.C1BarCode.C1BarCode.CodeType" /> property.
            </summary>
      <param name="format">An <see cref="T:System.Drawing.Imaging.ImageFormat" /> value that specifies the type of image to be created.</param>
      <returns>An image of the barcode with the specified format.</returns>
      <remarks>
            The <see cref="P:C1.Win.C1BarCode.C1BarCode.Image" /> property can also be used to obtain an image of the barcode. However,
            it always returns a <see cref="T:System.Drawing.Imaging.Metafile" /> image of a pre-set size and with a transparent 
            background. This method returns solid-background bitmaps.
            </remarks>
    </member>
    <member name="M:C1.Win.C1BarCode.C1BarCode.GetImage(System.Drawing.Imaging.ImageFormat,System.Int32,System.Int32)">
      <summary>
            Gets an image of the barcode that represents the value in the <see cref="P:C1.Win.C1BarCode.C1BarCode.Text" /> 
            property, obtained using the encoding specified by the <see cref="P:C1.Win.C1BarCode.C1BarCode.CodeType" /> property.
            </summary>
      <param name="format">An <see cref="T:System.Drawing.Imaging.ImageFormat" /> value that specifies the type of image to be created.</param>
      <param name="width">The width of the image, in pixels.</param>
      <param name="height">The height of the image, in pixels.</param>
      <returns>An image of the barcode with the specified format and dimensions.</returns>
      <remarks>
            The <see cref="P:C1.Win.C1BarCode.C1BarCode.Image" /> property can also be used to obtain an image of the barcode. However,
            it always returns a <see cref="T:System.Drawing.Imaging.Metafile" /> image of a pre-set size and with a transparent 
            background. This method returns solid-background bitmaps.
            </remarks>
    </member>
    <member name="M:C1.Win.C1BarCode.C1BarCode.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Raises the Paint event.
            </summary>
      <param name="e">A PaintEventArgs that contains the event data.</param>
    </member>
    <member name="P:C1.Win.C1BarCode.C1BarCode.BackColor">
      <summary>
            Gets or sets the background color for the control.
            </summary>
      <remarks>
            The background color only applies to the control. The barcode
            image that is available through the <see cref="P:C1.Win.C1BarCode.C1BarCode.Image" /> 
            property always has a transparent background.
            </remarks>
    </member>
    <member name="P:C1.Win.C1BarCode.C1BarCode.ForeColor">
      <summary>
            Gets or sets the foreground color for the control.
            </summary>
      <remarks>
            The foreground color applies to the control and also to the barcode
            image that is available through the <see cref="P:C1.Win.C1BarCode.C1BarCode.Image" /> 
            property.
            </remarks>
    </member>
    <member name="P:C1.Win.C1BarCode.C1BarCode.Font">
      <summary>
            Gets or sets the Font used to display the value of the Text property.
            </summary>
      <remarks>
            If the <see cref="P:C1.Win.C1BarCode.C1BarCode.ShowText" /> property is set to true, then the value 
            of the <see cref="P:C1.Win.C1BarCode.C1BarCode.Text" /> property is displayed centered along the 
            bottom of the barcode image using the given font.
            </remarks>
    </member>
    <member name="P:C1.Win.C1BarCode.C1BarCode.ShowText">
      <summary>
            Gets or sets whether the value of the Text property should be displayed along with the barcode image.
            </summary>
      <remarks>
            By default, the control will show only the barcode image. To include a textual
            representation of the value in the <see cref="P:C1.Win.C1BarCode.C1BarCode.Text" /> property, set the 
            <see cref="P:C1.Win.C1BarCode.C1BarCode.ShowText" /> property to True and set the <see cref="P:C1.Win.C1BarCode.C1BarCode.Font" /> property 
            to the Font to be used for the textual display.
            </remarks>
    </member>
    <member name="P:C1.Win.C1BarCode.C1BarCode.Text">
      <summary>
            Gets or sets the value that is encoded as a barcode image.
            </summary>
      <remarks>
        <para>Some encodings support alpha-numeric values of any length. Others
            are limited to numeric values or to a specific set of characters. 
            See the <see cref="T:C1.Win.C1BarCode.CodeTypeEnum" /> enumeration 
            for details.</para>
        <para>If you use characters that are invalid for the current encoding, the
            control will display a blank image.</para>
      </remarks>
      <example>This sample shows how to use the Text property to encode
            the value "123456" as a Code39-encoded barcode.
            <code>
            c1barcode1.CodeType = CodeTypeEnum.Code39;
            c1barcode1.Text = "123456";
            pictureBox1.Image = c1barcode1.Image;
            </code></example>
    </member>
    <member name="P:C1.Win.C1BarCode.C1BarCode.CodeType">
      <summary>
            Gets or sets the type of encoding to use when generating the barcode image.
            </summary>
      <remarks>
            The selected encoding is applied to the value stored in the 
            <see cref="P:C1.Win.C1BarCode.C1BarCode.Text" /> property to generate the barcode image 
            displayed in the control. The barcode image is also available through the 
            <see cref="P:C1.Win.C1BarCode.C1BarCode.Image" /> property.
            </remarks>
      <example>This sample shows how to use the CodeType property to encode
            the value "123456" as a Code39-encoded barcode.
            <code>
            c1barcode1.CodeType = CodeTypeEnum.Code39;
            c1barcode1.Text = "123456";
            pictureBox1.Image = c1barcode1.Image;
            </code></example>
    </member>
    <member name="P:C1.Win.C1BarCode.C1BarCode.BarNarrow">
      <summary>
            Gets or sets the width of the narrow bars in screen pixels.
            </summary>
      <remarks>
            By default, narrow bars are one screen pixel wide (1/96") and wide bars 
            are two pixels wide (1/96"). You should never have to change these values,
            they are exposed only in case you need to make adjustments for special
            barcode reader hardware.
            </remarks>
    </member>
    <member name="P:C1.Win.C1BarCode.C1BarCode.BarWide">
      <summary>
            Gets or sets the width of the wide bars in screen pixels.
            </summary>
      <remarks>
            By default, narrow bars are one screen pixel wide (1/96") and wide bars 
            are two pixels wide (1/96"). You should never have to change these values,
            they are exposed only in case you need to make adjustments for special
            barcode reader hardware.
            </remarks>
    </member>
    <member name="P:C1.Win.C1BarCode.C1BarCode.BarHeight">
      <summary>
            Gets or sets the height of the bars in screen pixels.
            </summary>
    </member>
    <member name="P:C1.Win.C1BarCode.C1BarCode.SizeMode">
      <summary>
            Gets or sets how the barcode image is displayed within the control.
            </summary>
      <remarks>
        <para>This property only affects how the barcode is displayed within
            the control. It has no effect on the actual barcode image, as returned by
            the <see cref="P:C1.Win.C1BarCode.C1BarCode.Image" /> property.</para>
        <para>In most applications, you will either center or left-align the barcode
            image within the control. Although stretching the image is possible, it may
            make it unreadable for some barcode readers.</para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1BarCode.C1BarCode.BarDirection">
      <summary>
            Gets or sets the direction of the barcode.
            </summary>
    </member>
    <member name="P:C1.Win.C1BarCode.C1BarCode.Image">
      <summary>
            Gets an image of the barcode that represents the value in the <see cref="P:C1.Win.C1BarCode.C1BarCode.Text" /> 
            property, obtained using the encoding specified by the <see cref="P:C1.Win.C1BarCode.C1BarCode.CodeType" /> property.
            </summary>
      <remarks>
        <para>The <b>Image</b> property returns a <see cref="T:System.Drawing.Imaging.Metafile" /> that can be 
            inserted in reports and other documents. If the value stored in the <see cref="P:C1.Win.C1BarCode.C1BarCode.Text" />
            property is invalid for the current encoding, the image returned is blank.</para>
        <para>Although the barcode image returned by the control is scalable, the default
            size is optimal for common barcode readers. Keep in mind that if you stretch
            the image and make it very large or very small, it may become unreadable to
            some readers.</para>
        <para>The metafile image has a transparent background and therefore cannot be 
            easily converted to a solid-background bitmap. To obtain a <see cref="T:System.Drawing.Bitmap" /> 
            image of the barcode, use the <see cref="M:C1.Win.C1BarCode.C1BarCode.GetImage(System.Drawing.Imaging.ImageFormat)" /> method instead.</para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1BarCode.C1BarCode.EncodingException">
      <summary>
            Gets the <see cref="T:System.Exception" /> that prevented the <see cref="P:C1.Win.C1BarCode.C1BarCode.Text" /> from being encoded.
            </summary>
      <remarks>
        <para>Most encodings have limitations that determine what type of text it can represent. For example,
            some are numeric-only and some require text of a specific length.</para>
        <para>If the value of the <see cref="P:C1.Win.C1BarCode.C1BarCode.Text" /> property cannot be represented using the current
            <see cref="P:C1.Win.C1BarCode.C1BarCode.CodeType" />, then no bar code will be generated and the control will remain blank.</para>
        <para>In this case, the <b>EncodingException</b> property returns details about the exception
            that prevented the bar code from being generated.</para>
      </remarks>
      <example>
            The code below sets the <see cref="P:C1.Win.C1BarCode.C1BarCode.Text" /> property and shows a message in case any errors were
            detected:
            <code>
            c1BarCode1.Text = textBox1.Text;
            label1.Text = c1BarCode1.EncodingException == null 
              ? string.Empty 
              : c1BarCode1.EncodingException.Message;
            </code></example>
    </member>
  </members>
</doc>